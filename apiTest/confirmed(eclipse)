package tqwt;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.StringTokenizer;

public class Api {
    public static void main(String[] args) throws IOException {
        StringBuilder urlBuilder = new StringBuilder("http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson"); /*URL*/
        urlBuilder.append("?" + URLEncoder.encode("serviceKey","UTF-8") + "=BGYZ3GEcNWvV9fWuAwFKo9dMtPwYVng3hWqlYLq9dHcHp5DGZAXeoBQJhD5nRR%2B0XZW8EqPjwkxzm5ph6ZIwqA%3D%3D"); /*Service Key*/
        urlBuilder.append("&" + URLEncoder.encode("ServiceKey","UTF-8") + "=" + URLEncoder.encode("BGYZ3GEcNWvV9fWuAwFKo9dMtPwYVng3hWqlYLq9dHcHp5DGZAXeoBQJhD5nRR+0XZW8EqPjwkxzm5ph6ZIwqA==", "UTF-8")); /*공공데이터포털에서 받은 인증키*/
        urlBuilder.append("&" + URLEncoder.encode("pageNo","UTF-8") + "=" + URLEncoder.encode("1", "UTF-8")); /*페이지번호*/
        urlBuilder.append("&" + URLEncoder.encode("numOfRows","UTF-8") + "=" + URLEncoder.encode("10", "UTF-8")); /*한 페이지 결과 수*/
        urlBuilder.append("&" + URLEncoder.encode("startCreateDt","UTF-8") + "=" + URLEncoder.encode("20211209", "UTF-8")); /*검색할 생성일 범위의 시작*/
        urlBuilder.append("&" + URLEncoder.encode("endCreateDt","UTF-8") + "=" + URLEncoder.encode("20211209", "UTF-8")); /*검색할 생성일 범위의 종료*/
        URL url = new URL(urlBuilder.toString());
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        conn.setRequestProperty("Content-type", "application/json");
        System.out.println("Response code: " + conn.getResponseCode());
        BufferedReader rd;
        if(conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
            rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        } else {
            rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
        }
        StringBuilder sb = new StringBuilder();
        String line;
        while ((line = rd.readLine()) != null) {
        	sb.append(line);
        }
        rd.close();
        conn.disconnect();
        System.out.println(sb.toString());
        String api=sb.toString();
        int a3=sb.indexOf("<deathCnt>");
        int a4=sb.indexOf("</deathCnt>");
        String cd=sb.substring(a3,a4);
        String cd1=cd.replace("<deathCnt>", "사망자 수 = ");
        String cd12=cd.replace("<deathCnt>", "");
        System.out.println(cd1);
        System.out.println(cd12);
        int a12=Integer.parseInt(cd12);
       
        int a38=sb.indexOf("<decideCnt>");
        int a48=sb.indexOf("</decideCnt>");
        String cd8=sb.substring(a38,a48);
        String cd18=cd8.replace("<decideCnt>", "확진자 수 = ");
        String cd128=cd8.replace("<decideCnt>", "");
        System.out.println(cd18);
        System.out.println(cd128);
        int a128=Integer.parseInt(cd128);
       
        
        
        StringBuilder urlBuilder1 = new StringBuilder("http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson"); /*URL*/
        urlBuilder1.append("?" + URLEncoder.encode("serviceKey","UTF-8") + "=BGYZ3GEcNWvV9fWuAwFKo9dMtPwYVng3hWqlYLq9dHcHp5DGZAXeoBQJhD5nRR%2B0XZW8EqPjwkxzm5ph6ZIwqA%3D%3D"); /*Service Key*/
        urlBuilder1.append("&" + URLEncoder.encode("ServiceKey","UTF-8") + "=" + URLEncoder.encode("BGYZ3GEcNWvV9fWuAwFKo9dMtPwYVng3hWqlYLq9dHcHp5DGZAXeoBQJhD5nRR+0XZW8EqPjwkxzm5ph6ZIwqA==", "UTF-8")); /*공공데이터포털에서 받은 인증키*/
        urlBuilder1.append("&" + URLEncoder.encode("pageNo","UTF-8") + "=" + URLEncoder.encode("1", "UTF-8")); /*페이지번호*/
        urlBuilder1.append("&" + URLEncoder.encode("numOfRows","UTF-8") + "=" + URLEncoder.encode("10", "UTF-8")); /*한 페이지 결과 수*/
        urlBuilder1.append("&" + URLEncoder.encode("startCreateDt","UTF-8") + "=" + URLEncoder.encode("20211208", "UTF-8")); /*검색할 생성일 범위의 시작*/
        urlBuilder1.append("&" + URLEncoder.encode("endCreateDt","UTF-8") + "=" + URLEncoder.encode("20211208", "UTF-8")); /*검색할 생성일 범위의 종료*/
        URL url1 = new URL(urlBuilder1.toString());
        HttpURLConnection conn1 = (HttpURLConnection) url1.openConnection();
        conn1.setRequestMethod("GET");
        conn1.setRequestProperty("Content-type", "application/json");
        System.out.println("Response code: " + conn1.getResponseCode());
        BufferedReader rd1;
        if(conn1.getResponseCode() >= 200 && conn1.getResponseCode() <= 300) {
            rd1 = new BufferedReader(new InputStreamReader(conn1.getInputStream()));
        } else {
            rd1 = new BufferedReader(new InputStreamReader(conn1.getErrorStream()));
        }
        StringBuilder sb1 = new StringBuilder();
        String line1;
        while ((line1 = rd1.readLine()) != null) {
        	sb1.append(line1);
        }
        rd1.close();
        conn1.disconnect();
        System.out.println(sb1.toString());
        String api1=sb.toString();
        int a34=sb1.indexOf("<deathCnt>");
        int a44=sb1.indexOf("</deathCnt>");
        String cd4=sb1.substring(a34,a44);
        String cd14=cd4.replace("<deathCnt>", "사망자 수 = ");
        String cd124=cd4.replace("<deathCnt>", "");
        System.out.println(cd14);
        System.out.println(cd124);
        int a124=Integer.parseInt(cd124);
        int aaa=a12-a124;
       
        int a387=sb1.indexOf("<decideCnt>");
        int a487=sb1.indexOf("</decideCnt>");
        String cd87=sb1.substring(a387,a487);
        String cd187=cd87.replace("<decideCnt>", "확진자 수 = ");
        String cd1287=cd87.replace("<decideCnt>", "");
        System.out.println(cd187);
        System.out.println(cd1287);
        int a1287=Integer.parseInt(cd1287);
        int abab=a128-a1287;
        System.out.println(abab);
        System.out.println(aaa);
        
        
    }
}
